@model Group


<div class="d-flex flex-column h-100 ">
    <!-- Chat Header -->
    <div class="p-3 border-bottom bg-white">
        <div class="d-flex justify-content-between align-items-center">
            <div class="d-flex align-items-center">
                <h5 class="mb-0">@Model.Name</h5>
                <span class="badge bg-secondary ms-2">
                    @Model.UserGroups.Count members
                </span>
            </div>
            @if (ViewBag.IsModerator)
            {
                <div class="dropdown">
                    <button class="btn btn-light btn-sm" data-bs-toggle="dropdown">
                        <i class="bi bi-three-dots-vertical"></i>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li>
                            <a class="dropdown-item" asp-action="Edit" asp-route-id="@Model.Id">
                                <i class="bi bi-pencil me-2"></i>Edit Group
                            </a>
                        </li>
                        <li>
                            <hr class="dropdown-divider">
                        </li>
                        <li>
                            <form asp-action="Delete" asp-route-id="@Model.Id"
                                    onsubmit="return confirm('Are you sure you want to delete this group?');">
                                <button type="submit" class="dropdown-item text-danger">
                                    <i class="bi bi-trash me-2"></i>Delete Group
                                </button>
                            </form>
                        </li>
                    </ul>
                </div>
            }
        </div>
    </div>

    <!-- Chat Area -->
    <div class="flex-grow-1 bg-light p-3" style="overflow-y: auto;" id="messagesList">
        @foreach (var message in Model.Messages.OrderBy(m => m.Id))
        {
            <div class="mb-3 @(message.UserId == ViewBag.CurrentUserId ? "text-end" : "")">
                <div class="d-inline-block p-2 rounded @(message.UserId == ViewBag.CurrentUserId ? "bg-primary text-white" : "bg-white border")">
                    <div class="small text-@(message.UserId == ViewBag.CurrentUserId ? "light" : "muted")">
                        @message.User.FirstName @message.User.LastName • @message.Timestamp
                    </div>
                    <div>@message.Content</div>
                </div>
            </div>
        }
    </div>

    <!-- Message Input -->
    <div class="p-3 border-top bg-white">
        <input type="text" id="messageInput" class="form-control" placeholder="Type a message...">
        <button id="sendButton" type="button" class="btn btn-primary">
            <i class="bi bi-send"></i>
        </button>
    </div>
</div>



<script>


    var currentUserId = @Json.Serialize(ViewBag.CurrentUserId);
	var groupId = @Json.Serialize(Model.Id);
    $(function () {
        


        $('#sendButton').click(function () {
            console.log("ASDFSAFQAFQAFAWSFASFAFAFAFAFAFA");
            const chatMessage = {
                userId: currentUserId,
                groupId: groupId,
                content: $('#messageInput').val(),
                timestamp: new Date().toISOString()
            };

            connection.invoke("SendMessageToUsers", chatMessage).catch(function (err) {
                console.error(err.toString());
            });

            $('#messageInput').val('').focus();
        });



    });

</script>