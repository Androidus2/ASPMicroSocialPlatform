@model ASPMicroSocialPlatform.Models.Group

<a href="@Url.Action("Show", new { id = Model.Id })" 
   class="text-decoration-none group-item @(ViewBag.ActiveGroupId == Model.Id ? "active" : "")">
    <div class="p-3 border-bottom hover-bg">
        <div class="d-flex align-items-center">
            <div class="group-avatar me-3">
                @{
                    var currentUserId = ViewBag.CurrentUserId;
                    var otherMembers = Model.UserGroups?
                    .Where(ug => ug.User != null && ug.UserId != currentUserId)
                    .Select(ug => ug.User)
                    .Take(4)
                    .ToList() ?? new List<ApplicationUser>();

                    switch (otherMembers.Count)
                    {
                        case 0:
                            <div class="rounded-circle bg-primary bg-opacity-10 p-2">
                                <i class="bi bi-people-fill text-primary"></i>
                            </div>
                            break;

                        case 1:
                            <img src="@(string.IsNullOrEmpty(otherMembers[0].ProfilePicture) ? "/images/MissingNo.png" : otherMembers[0].ProfilePicture)"
                                 class="rounded-circle single-avatar"
                                 alt="@otherMembers[0].FirstName" />
                            break;

                        case 2:
                            <div class="dual-avatar">
                                <div class="dual-part" style="background-image: url('@(string.IsNullOrEmpty(otherMembers[0].ProfilePicture) ? "/images/MissingNo.png" : otherMembers[0].ProfilePicture)')"></div>
                                <div class="dual-part" style="background-image: url('@(string.IsNullOrEmpty(otherMembers[1].ProfilePicture) ? "/images/MissingNo.png" : otherMembers[1].ProfilePicture)')"></div>
                            </div>
                            break;

                        case 3:
                            <div class="tri-avatar">
                                <div class="tri-part-1" style="background-image: url('@(string.IsNullOrEmpty(otherMembers[0].ProfilePicture) ? "/images/MissingNo.png" : otherMembers[0].ProfilePicture)')"></div>
                                <div class="tri-part-2" style="background-image: url('@(string.IsNullOrEmpty(otherMembers[1].ProfilePicture) ? "/images/MissingNo.png" : otherMembers[1].ProfilePicture)')"></div>
                                <div class="tri-part-3" style="background-image: url('@(string.IsNullOrEmpty(otherMembers[2].ProfilePicture) ? "/images/MissingNo.png" : otherMembers[2].ProfilePicture)')"></div>
                            </div>
                            break;

                        default:
                            <div class="quad-avatar">
                                <div class="quad-part" style="background-image: url('@(string.IsNullOrEmpty(otherMembers[0].ProfilePicture) ? "/images/MissingNo.png" : otherMembers[0].ProfilePicture)')"></div>
                                <div class="quad-part" style="background-image: url('@(string.IsNullOrEmpty(otherMembers[1].ProfilePicture) ? "/images/MissingNo.png" : otherMembers[1].ProfilePicture)')"></div>
                                <div class="quad-part" style="background-image: url('@(string.IsNullOrEmpty(otherMembers[2].ProfilePicture) ? "/images/MissingNo.png" : otherMembers[2].ProfilePicture)')"></div>
                                <div class="quad-part" style="background-image: url('@(string.IsNullOrEmpty(otherMembers[3].ProfilePicture) ? "/images/MissingNo.png" : otherMembers[3].ProfilePicture)')"></div>
                            </div>
                            break;
                    }
                }
            </div>
            
            <!-- Group Info -->
            <div class="flex-grow-1 text-truncate">
                <h6 class="mb-1 text-dark text-truncate">@Model.Name</h6>
                <p class="mb-0 small text-muted text-truncate">
                    @(Model.Description?.Substring(0, Math.Min(Model.Description.Length, 50)))
                </p>
            </div>

        </div>



        @if (Model.UserGroups?.Any() == true)
        {
            <div class="mt-2 d-flex align-items-center">
                <span class="badge rounded-pill bg-primary">
                    @(Model.UserGroups?.Count(ug => ug.UserId != null) ?? 0) members
                </span>
            </div>
        }
    </div>
</a>

<style>
    .group-avatar {
        width: 48px;
        height: 48px;
        position: relative;
        overflow: hidden;
        border-radius: 50%;
        border: 2px solid #fff;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    }

    .single-avatar {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 50%;
    }

    .dual-avatar {
        width: 100%;
        height: 100%;
        position: relative;
        border-radius: 50%;
        overflow: hidden;
    }

    .dual-part {
        position: absolute;
        width: 50%;
        height: 100%;
        background-size: cover;
        background-position: center;
    }

    .dual-part:first-child {
        left: 0;
    }

    .dual-part:last-child {
        right: 0;
    }

    .tri-avatar {
        width: 100%;
        height: 100%;
        position: relative;
        border-radius: 50%;
        overflow: hidden;
    }

    .tri-part-1 {
        position: absolute;
        width: 50%;
        height: 100%;
        left: 0;
        background-size: cover;
        background-position: center;
    }

    .tri-part-2, .tri-part-3 {
        position: absolute;
        width: 50%;
        height: 50%;
        right: 0;
        background-size: cover;
        background-position: center;
    }

    .tri-part-2 {
        top: 0;
    }

    .tri-part-3 {
        bottom: 0;
    }

    .quad-avatar {
        display: grid;
        grid-template-columns: 1fr 1fr;
        width: 100%;
        height: 100%;
        border-radius: 50%;
        overflow: hidden;
    }

    .quad-part {
        background-size: cover;
        background-position: center;
        width: 100%;
        height: 100%;
    }
</style>